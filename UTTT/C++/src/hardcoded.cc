
#include <ctime>

#include "../hardcoded.h"

using namespace std;

int hardcode_seed = time(NULL);
inline int fastrand() {
    hardcode_seed = (214013 * hardcode_seed + 2531011);
    return (hardcode_seed >> 16) & 0x7FFF;
}

constexpr const int first_move_distribution[81][2] = {
    {40, 20},
    {36, 10},
    {38, 10},
    {42, 10},
    {44, 10},
    {0, 5},
    {2, 5},
    {6, 5},
    {8, 5},
    {18, 5},
    {20, 5},
    {24, 5},
    {26, 5},
    {54, 5},
    {56, 5},
    {60, 5},
    {62, 5},
    {72, 5},
    {74, 5},
    {78, 5},
    {80, 5},
    {37, 2},
    {39, 2},
    {41, 2},
    {43, 2},
    {10, 2},
    {30, 2},
    {50, 2},
    {70, 2},
    {1, 2},
    {3, 2},
    {5, 2},
    {7, 2},
    {9, 2},
    {11, 2},
    {12, 2},
    {14, 2},
    {15, 2},
    {16, 2},
    {17, 2},
    {19, 2},
    {21, 2},
    {23, 2},
    {25, 2},
    {27, 2},
    {28, 2},
    {29, 2},
    {32, 2},
    {33, 2},
    {34, 2},
    {35, 2},
    {45, 2},
    {46, 2},
    {47, 2},
    {48, 2},
    {51, 2},
    {52, 2},
    {53, 2},
    {55, 2},
    {57, 2},
    {59, 2},
    {61, 2},
    {63, 2},
    {64, 2},
    {65, 2},
    {66, 2},
    {68, 2},
    {69, 2},
    {71, 2},
    {73, 1},
    {75, 1},
    {77, 1},
    {79, 1},
    {4, 1},
    {13, 1},
    {22, 1},
    {31, 1},
    {49, 1},
    {58, 1},
    {67, 1},
    {76, 1}
};
constexpr const int first_move_sum = 248;


int getHardcodedFirstMove(){
    int num = fastrand() % first_move_sum;
    for (int i = 0; i < 81; ++i){
        if (num < first_move_distribution[i][1]){
            return first_move_distribution[i][0];
        }
        num -= first_move_distribution[i][1];
    }
    return first_move_distribution[0][0];
}



constexpr const int second_move_distribution[9][9][4][2] = {
    {
        {{3, 66}, {6, 24}, {2, 21}, {8, 21}},
        {{3, 81}, {14, 75}, {12, 3}, {16, 3}},
        {{3, 78}, {20, 48}, {24, 18}, {26, 12}},
        {{2, 75}, {34, 69}, {32, 6}, {0, 0}},
        {{1, 75}, {40, 75}, {0, 0}, {0, 0}},
        {{2, 75}, {52, 66}, {46, 9}, {0, 0}},
        {{3, 75}, {60, 48}, {62, 15}, {56, 12}},
        {{3, 72}, {68, 63}, {66, 6}, {70, 3}},
        {{2, 72}, {80, 69}, {72, 3}, {0, 0}}
    },
    {
        {{2, 72}, {8, 69}, {6, 3}, {0, 0}},
        {{2, 72}, {14, 42}, {12, 30}, {0, 0}},
        {{3, 72}, {24, 63}, {20, 6}, {26, 3}},
        {{3, 72}, {32, 30}, {30, 30}, {34, 12}},
        {{1, 72}, {40, 72}, {0, 0}, {0, 0}},
        {{3, 72}, {48, 27}, {50, 24}, {52, 21}},
        {{2, 72}, {60, 69}, {56, 3}, {0, 0}},
        {{2, 72}, {66, 48}, {68, 24}, {0, 0}},
        {{1, 72}, {80, 72}, {0, 0}, {0, 0}}
    },
    {
        {{3, 66}, {0, 42}, {8, 18}, {6, 6}},
        {{3, 72}, {12, 63}, {14, 6}, {16, 3}},
        {{3, 54}, {24, 21}, {26, 18}, {18, 15}},
        {{3, 72}, {34, 54}, {30, 9}, {28, 9}},
        {{1, 72}, {40, 72}, {0, 0}, {0, 0}},
        {{2, 72}, {52, 66}, {46, 6}, {0, 0}},
        {{1, 72}, {60, 72}, {0, 0}, {0, 0}},
        {{3, 72}, {66, 63}, {70, 6}, {68, 3}},
        {{3, 69}, {80, 54}, {78, 9}, {72, 6}}
    },
    {
        {{2, 72}, {8, 69}, {0, 3}, {0, 0}},
        {{3, 72}, {10, 24}, {16, 24}, {14, 24}},
        {{1, 72}, {20, 72}, {0, 0}, {0, 0}},
        {{2, 72}, {28, 48}, {34, 24}, {0, 0}},
        {{1, 69}, {40, 69}, {0, 0}, {0, 0}},
        {{2, 69}, {46, 39}, {52, 30}, {0, 0}},
        {{3, 69}, {56, 63}, {62, 3}, {60, 3}},
        {{3, 69}, {70, 27}, {64, 21}, {68, 21}},
        {{2, 69}, {80, 66}, {72, 3}, {0, 0}}
    },
    {
        {{2, 72}, {0, 63}, {8, 9}, {0, 0}},
        {{3, 69}, {14, 33}, {12, 30}, {10, 6}},
        {{2, 69}, {20, 54}, {24, 15}, {0, 0}},
        {{3, 66}, {28, 30}, {34, 30}, {30, 6}},
        {{3, 111}, {44, 39}, {36, 36}, {38, 36}},
        {{3, 66}, {46, 33}, {52, 30}, {50, 3}},
        {{2, 69}, {60, 63}, {56, 6}, {0, 0}},
        {{2, 69}, {68, 42}, {66, 27}, {0, 0}},
        {{2, 69}, {80, 57}, {72, 12}, {0, 0}}
    },
    {
        {{1, 69}, {0, 69}, {0, 0}, {0, 0}},
        {{3, 69}, {10, 33}, {16, 21}, {12, 15}},
        {{3, 69}, {24, 63}, {20, 3}, {18, 3}},
        {{2, 69}, {28, 36}, {34, 33}, {0, 0}},
        {{1, 66}, {40, 66}, {0, 0}, {0, 0}},
        {{2, 69}, {46, 39}, {52, 30}, {0, 0}},
        {{3, 69}, {60, 63}, {56, 3}, {55, 3}},
        {{3, 69}, {64, 33}, {70, 27}, {66, 9}},
        {{1, 69}, {72, 69}, {0, 0}, {0, 0}}
    },
    {
        {{3, 66}, {0, 39}, {8, 18}, {2, 9}},
        {{2, 69}, {14, 60}, {12, 9}, {0, 0}},
        {{1, 69}, {20, 69}, {0, 0}, {0, 0}},
        {{1, 69}, {28, 69}, {0, 0}, {0, 0}},
        {{1, 66}, {40, 66}, {0, 0}, {0, 0}},
        {{3, 69}, {46, 60}, {50, 6}, {52, 3}},
        {{3, 54}, {56, 30}, {62, 12}, {55, 12}},
        {{2, 69}, {68, 66}, {66, 3}, {0, 0}},
        {{3, 66}, {80, 39}, {74, 15}, {72, 12}}
    },
    {
        {{2, 69}, {0, 66}, {8, 3}, {0, 0}},
        {{2, 69}, {14, 36}, {12, 33}, {0, 0}},
        {{2, 69}, {20, 66}, {18, 3}, {0, 0}},
        {{3, 69}, {30, 30}, {32, 27}, {28, 12}},
        {{1, 66}, {40, 66}, {0, 0}, {0, 0}},
        {{3, 69}, {50, 33}, {46, 21}, {48, 15}},
        {{2, 69}, {56, 66}, {60, 3}, {0, 0}},
        {{3, 69}, {68, 39}, {66, 27}, {64, 3}},
        {{2, 69}, {72, 66}, {80, 3}, {0, 0}}
    },
    {
        {{1, 69}, {0, 69}, {0, 0}, {0, 0}},
        {{3, 69}, {12, 39}, {10, 15}, {14, 15}},
        {{3, 66}, {20, 48}, {18, 9}, {24, 9}},
        {{3, 69}, {28, 57}, {30, 6}, {34, 6}},
        {{1, 66}, {40, 66}, {0, 0}, {0, 0}},
        {{1, 69}, {46, 69}, {0, 0}, {0, 0}},
        {{3, 63}, {60, 36}, {56, 24}, {54, 3}},
        {{1, 69}, {66, 69}, {0, 0}, {0, 0}},
        {{3, 51}, {72, 27}, {75, 12}, {74, 12}}
    }
};

int getHardcodedSecondMove(const unsigned int global, const unsigned int local){
    auto& counts = second_move_distribution[global][local];
    if (counts[0][0] > 1){
        int num = fastrand() % counts[0][1];
        for (int i = 1; i <= counts[0][0]; ++i){
            if (num < counts[i][1]){
                return counts[i][0];
            }
            num -= counts[i][1];
        }
    }
    return counts[1][0];
}
